{"version":3,"sources":["components/TodoItem/TodoItem.tsx","components/TodoLIst/TodoList.tsx","components/Header/Header.tsx","App.tsx","index.tsx"],"names":["TodoItem","item","onClickCompleteHandler","onClickDeleteHandler","onChangeTaskHandler","useState","isEdit","setIsEdit","ref","useRef","useOnclickOutside","className","type","checked","completed","onChange","value","label","onKeyPress","event","key","onDoubleClick","onClick","TodoList","tasks","setTasks","task","setTask","sort","setSort","useEffect","lsTasks","localStorage","getItem","JSON","parse","prevItem","nextItem","setItem","stringify","index","target","newTasks","filter","i","sortTasks","onKeyPressCapture","placeholder","map","length","Header","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6d5cad5c.chunk.js","sourcesContent":["import React, { useState, useRef } from \"react\";\nimport useOnclickOutside from \"react-cool-onclickoutside\";\n\nimport { ITask } from \"components/TodoLIst/TodoList\";\nimport \"./styles.css\";\n\ninterface IPropsTodoItem {\n  item: ITask;\n  onClickCompleteHandler: () => void;\n  onClickDeleteHandler: () => void;\n  onChangeTaskHandler: (event: {\n    target: { value: React.SetStateAction<string> };\n  }) => void;\n}\n\nexport const TodoItem = ({\n  item,\n  onClickCompleteHandler,\n  onClickDeleteHandler,\n  onChangeTaskHandler\n}: IPropsTodoItem) => {\n  const [isEdit, setIsEdit] = useState(false);\n  const ref = useRef();\n\n  const isEditClickHandler = () => {\n    setIsEdit(true);\n  };\n\n  useOnclickOutside(ref as any, () => {\n    setIsEdit(false);\n  });\n\n  const onKeyPressHandler = (event: React.KeyboardEvent<HTMLInputElement>) => {\n    event.key === \"Enter\" && setIsEdit(false);\n  };\n\n  return (\n    <div className=\"todo-item\">\n      <input\n        type=\"checkbox\"\n        className=\"todo-item__checkbox\"\n        checked={item.completed}\n        onChange={onClickCompleteHandler}\n      />\n      {!isEdit ? (\n        <span\n          onDoubleClick={isEditClickHandler}\n          className={`todo-item__label ${item.completed &&\n            \"todo-item__label--completed\"}`}\n        >\n          {item.label}\n        </span>\n      ) : (\n        <input\n          ref={ref as any}\n          className=\"todo-item__input\"\n          value={item.label}\n          onChange={onChangeTaskHandler}\n          onKeyPress={onKeyPressHandler}\n        />\n      )}\n      <button onClick={onClickDeleteHandler} className=\"todo-item__delete\">\n        x\n      </button>\n    </div>\n  );\n};\n","import React, { useState, useEffect } from \"react\";\nimport \"./styles.css\";\nimport { TodoItem } from \"components/TodoItem/TodoItem\";\n\nexport interface ITask {\n  label: string;\n  completed: boolean;\n}\n\nexport const TodoList = () => {\n  const [tasks, setTasks] = useState<ITask[]>([]);\n  const [task, setTask] = useState(\"\");\n  const [sort, setSort] = useState(\"asc\");\n\n  useEffect(() => {\n    const lsTasks = localStorage.getItem(\"lsTasks\");\n    if (lsTasks) {\n      const tasks = JSON.parse(lsTasks);\n      tasks.sort((prevItem: ITask, nextItem: ITask) =>\n        prevItem.label > nextItem.label ? 1 : -1\n      );\n      setTasks(tasks);\n    }\n  }, []);\n\n  useEffect(() => {\n    localStorage.setItem(\"lsTasks\", JSON.stringify(tasks));\n  }, [tasks]);\n\n  const changeSortHandler = () => {\n    const sortTasks = [...tasks];\n    if (sort === \"asc\") {\n      sortTasks.sort((prevItem: ITask, nextItem: ITask) => {\n        return prevItem.label > nextItem.label ? -1 : 1;\n      });\n      setTasks([...sortTasks]);\n      return setSort(\"desc\");\n    }\n    if (sort === \"desc\") {\n      sortTasks.sort((prevItem: ITask, nextItem: ITask) => {\n        return prevItem.label > nextItem.label ? 1 : -1;\n      });\n      setTasks([...sortTasks]);\n      setSort(\"asc\");\n    }\n  };\n\n  const changeTaskHandler = (event: {\n    target: { value: React.SetStateAction<string> };\n  }) => {\n    setTask(event.target.value);\n  };\n\n  const onKeyPressHandler = (event: React.KeyboardEvent<HTMLInputElement>) => {\n    if (event.key === \"Enter\" && task) {\n      setTasks([...tasks, { label: task, completed: false }]);\n      setTask(\"\");\n    }\n  };\n\n  const onClickCompleteHandler = (index: number) => () => {\n    tasks[index].completed = !tasks[index].completed;\n    setTasks([...tasks]);\n  };\n\n  const onChangeTaskHandler = (index: number) => (event: {\n    target: { value: React.SetStateAction<string> };\n  }) => {\n    tasks[index].label = event.target.value as string;\n    setTasks([...tasks]);\n  };\n\n  const onClickDeleteHandler = (index: number) => () => {\n    const newTasks = tasks.filter((item, i) => i !== index);\n    setTasks([...newTasks]);\n  };\n\n  return (\n    <div className=\"todo-list\">\n      <header className=\"todo-list__header\">\n        <button className=\"toggle\" onClick={changeSortHandler}></button>\n        <input\n          value={task}\n          onChange={changeTaskHandler}\n          onKeyPressCapture={onKeyPressHandler}\n          className=\"todo-list__field\"\n          placeholder=\"type a task...\"\n          type=\"text\"\n        />\n      </header>\n      <div className=\"todo-list__container\">\n        {tasks.map((item: ITask, index: number) => (\n          <TodoItem\n            key={index}\n            item={item}\n            onClickCompleteHandler={onClickCompleteHandler(index)}\n            onClickDeleteHandler={onClickDeleteHandler(index)}\n            onChangeTaskHandler={onChangeTaskHandler(index)}\n          />\n        ))}\n      </div>\n      <footer className=\"todo-list__footer\">\n        <div>\n          <span>Total tasks: {tasks.length}</span>\n        </div>\n      </footer>\n    </div>\n  );\n};\n","import React from \"react\";\nimport './styles.css';\n\nexport const Header = () => {\n  return (\n    <header className=\"header\">\n      <h1 className=\"header__title\">todos</h1>\n    </header>\n  );\n};\n","import React from 'react';\nimport { TodoList } from 'components/TodoLIst/TodoList';\nimport { Header } from 'components/Header/Header';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Header />\n      <TodoList />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}